// Code generated by go-swagger; DO NOT EDIT.

package j_q_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jingweno/jqplay/api/swagger/models"
)

// PostRunReader is a Reader for the PostRun structure.
type PostRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostRunOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPostRunDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostRunOK creates a PostRunOK with default headers values
func NewPostRunOK() *PostRunOK {
	return &PostRunOK{}
}

/*PostRunOK handles this case with default header values.

A successful response.
*/
type PostRunOK struct {
	Payload *models.APIRunResponse
}

func (o *PostRunOK) Error() string {
	return fmt.Sprintf("[POST /run][%d] postRunOK  %+v", 200, o.Payload)
}

func (o *PostRunOK) GetPayload() *models.APIRunResponse {
	return o.Payload
}

func (o *PostRunOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIRunResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRunDefault creates a PostRunDefault with default headers values
func NewPostRunDefault(code int) *PostRunDefault {
	return &PostRunDefault{
		_statusCode: code,
	}
}

/*PostRunDefault handles this case with default header values.

An unexpected error response
*/
type PostRunDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the post run default response
func (o *PostRunDefault) Code() int {
	return o._statusCode
}

func (o *PostRunDefault) Error() string {
	return fmt.Sprintf("[POST /run][%d] PostRun default  %+v", o._statusCode, o.Payload)
}

func (o *PostRunDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *PostRunDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
